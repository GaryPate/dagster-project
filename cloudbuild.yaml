steps:

  - name: gcr.io/cloud-builders/docker
    secretEnv: ['DAGSTER_POSTGRES_USER', 'DAGSTER_POSTGRES_PASSWORD', 'BEARER_TOKEN']
    entrypoint: bash
    args: 
    - -c
    - |
        docker build -f Dockerfile -t ${_REGISTRY_BASE}/dagster-project:$SHORT_SHA -t ${_REGISTRY_BASE}/dagster-project:${_SAFE_BRANCH} --build-arg=PGUSER=$${DAGSTER_POSTGRES_USER} --build-arg=PGPASS=$${DAGSTER_POSTGRES_PASSWORD} --build-arg=BEARER=$${BEARER_TOKEN} --build-arg=DAGSTER_IMAGE=${_REGISTRY_BASE}/dagster-project:develop .

  - name: gcr.io/cloud-builders/docker
    entrypoint: bash
    args: 
    - -c
    - |
        docker build -f dagster_grafana/Dockerfile -t ${_REGISTRY_BASE}/dagster-grafana:$SHORT_SHA -t ${_REGISTRY_BASE}/dagster-grafana:${_SAFE_BRANCH} --build-arg=GFUSER=$${GRAFANA_USER} --build-arg=GFPASS=$${GRAFANA_PASSWORD} .

  - name: gcr.io/cloud-builders/docker
    secretEnv: ['DAGSTER_POSTGRES_USER', 'DAGSTER_POSTGRES_PASSWORD']
    entrypoint: bash
    args: 
    - -c
    - |
        docker build -f dagster_postgres/Dockerfile -t ${_REGISTRY_BASE}/dagster-postgres:$SHORT_SHA -t ${_REGISTRY_BASE}/dagster-postgres:${_SAFE_BRANCH} --build-arg=PGUSER=$${DAGSTER_POSTGRES_USER} --build-arg=PGPASS=$${DAGSTER_POSTGRES_PASSWORD} .

  - name: gcr.io/cloud-builders/docker
    secretEnv: ['GRAFANA_USER', 'GRAFANA_PASSWORD']
    entrypoint: bash
    args: 
    - -c
    - |
        docker build -f nginx/Dockerfile -t ${_REGISTRY_BASE}/dagster-nginx:$SHORT_SHA -t ${_REGISTRY_BASE}/dagster-nginx:${_SAFE_BRANCH} --build-arg=GFUSER=$${GRAFANA_USER} --build-arg=GFPASS=$${GRAFANA_PASSWORD} .

availableSecrets:
  secretManager:
  - versionName: projects/ml-dev-403200/secrets/twitter_bearer_token/versions/latest
    env: 'BEARER_TOKEN'
  - versionName: projects/ml-dev-403200/secrets/grafana_user/versions/latest
    env: 'GRAFANA_USER'
  - versionName: projects/ml-dev-403200/secrets/grafana_pass/versions/latest
    env: 'GRAFANA_PASSWORD'
  - versionName: projects/ml-dev-403200/secrets/dagster_postgres_user/versions/latest
    env: 'DAGSTER_POSTGRES_USER'
  - versionName: projects/ml-dev-403200/secrets/dagster_postgres_pass/versions/latest
    env: 'DAGSTER_POSTGRES_PASSWORD'


options:
  dynamic_substitutions: true
images:
  - '${_REGISTRY_BASE}/dagster-project:$SHORT_SHA'
  - '${_REGISTRY_BASE}/dagster-project:${_SAFE_BRANCH}'
  - '${_REGISTRY_BASE}/dagster-postgres:$SHORT_SHA'
  - '${_REGISTRY_BASE}/dagster-postgres:${_SAFE_BRANCH}'
  - '${_REGISTRY_BASE}/dagster-grafana:$SHORT_SHA'
  - '${_REGISTRY_BASE}/dagster-grafana:${_SAFE_BRANCH}'
  - '${_REGISTRY_BASE}/dagster-nginx:$SHORT_SHA'
  - '${_REGISTRY_BASE}/dagster-nginx:${_SAFE_BRANCH}'
timeout: 500s
substitutions:
  _SAFE_BRANCH: ${BRANCH_NAME//\//-}
  _REGISTRY_BASE: australia-southeast1-docker.pkg.dev/ml-dev-403200/dagster-docker

